// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using xyz.Data;

#nullable disable

namespace xyz.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241011152045_SeedPaymentNotifications")]
    partial class SeedPaymentNotifications
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("xyz.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100m,
                            CreatedAt = new DateTime(2024, 10, 11, 15, 20, 45, 701, DateTimeKind.Utc).AddTicks(9787),
                            Status = "Pending",
                            TransactionId = "trans123"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 200m,
                            CreatedAt = new DateTime(2024, 10, 11, 15, 20, 45, 701, DateTimeKind.Utc).AddTicks(9792),
                            Status = "Pending",
                            TransactionId = "trans456"
                        });
                });

            modelBuilder.Entity("xyz.Models.PaymentNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PaymentNotifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100.00m,
                            Currency = "USD",
                            CustomerId = "cust_001",
                            PaymentMethod = "Credit Card",
                            Status = "Completed",
                            Timestamp = new DateTime(2024, 10, 11, 15, 20, 45, 702, DateTimeKind.Utc).AddTicks(138),
                            TransactionId = "txn_001"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 200.00m,
                            Currency = "EUR",
                            CustomerId = "cust_002",
                            PaymentMethod = "PayPal",
                            Status = "Pending",
                            Timestamp = new DateTime(2024, 10, 11, 15, 20, 45, 702, DateTimeKind.Utc).AddTicks(141),
                            TransactionId = "txn_002"
                        });
                });

            modelBuilder.Entity("xyz.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnrolled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
